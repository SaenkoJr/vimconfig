-- [nfnl] Compiled from fnl/saenkomm/plugins-configs/fzf.fnl by https://github.com/Olical/nfnl, do not edit.
module(saenkomm.plugins.fzf, {[require] = {[nvim] = aniseed.nvim, [util] = saenkomm.util, [string] = aniseed.string}})
__fnl_global__def_2d(__fnl_global__rg_2dopts, {"--column", "--line-number", "--no-heading", "--no-ignore-vcs", "--fixed-strings", "--smart-case", "--hidden", "--follow", "-g \"!yarn.lock\"", "-g \"!.git\"", "-g \"!node_modules\"", "-g \"!log\"", "-- "})
__fnl_global__def_2d(rg, ("rg" .. " " .. string.join(" ", __fnl_global__rg_2dopts)))
nvim.ex.command_("-bang -nargs=* Rg call fzf#vim#grep('", rg, "'.shellescape(<q-args>), 1,", "<bang>0 ? fzf#vim#with_preview(\"up:75%\") : fzf#vim#with_preview(\"right:50%\", \"?\"), <bang>0)")
util["set-var"]("g", "fzf_layout", {window = {width = 0.9, height = 0.9}})
util["set-var"]("g", "fzf_preview_window", {"right:50%", "ctrl-/"})
util.noremap("n", "<leader>FN", ":Rg <c-r><c-w><cr>")
util.noremap("n", "<leader>LG", "<cmd>Rg<cr>")
util.noremap("n", "<leader>ff", "<cmd>Files<cr>")
return util.noremap("n", "<leader>FF", "<cmd>Files ~<cr>")
